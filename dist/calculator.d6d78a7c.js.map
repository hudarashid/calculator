{"version":3,"sources":["calculator.js"],"names":["runningTotal","buffer","previousOperator","screen","document","querySelector","addEventListener","event","buttonClick","target","innerText","value","isNaN","parseInt","handleSymbol","handleNumber","rerender","flushOperation","length","substring","handleMath","intBuffer"],"mappings":"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","file":"calculator.d6d78a7c.js","sourceRoot":"..","sourcesContent":["let runningTotal = 0;\r\nlet buffer = \"0\"; //display at the top black screen (note that number displayed is in string \"12\")\r\nlet previousOperator = null;\r\nconst screen = document.querySelector(\".screen\");\r\n\r\ndocument\r\n  .querySelector(\".calc-buttons\")\r\n  .addEventListener(\"click\", function (event) {\r\n    //console.log(\"here\");\r\n    buttonClick(event.target.innerText);\r\n  });\r\n\r\nfunction buttonClick(value) {\r\n  //console.log(value);\r\n  if (isNaN(parseInt(value))) {\r\n    //is isNOTaNumber, which is symbol\r\n    handleSymbol(value);\r\n  } else {\r\n    handleNumber(value);\r\n  }\r\n  rerender();\r\n}\r\n\r\nfunction handleNumber(value) {\r\n  if (buffer === \"0\") {\r\n    //if hit 0, means dont append it\r\n    buffer = value;\r\n  } else {\r\n    buffer += value; //if hit 2, and hit 5, it become 25 (note that it is a string)\r\n  }\r\n}\r\n\r\nfunction handleSymbol(value) {\r\n  switch (value) {\r\n    case \"C\":\r\n      buffer = \"0\";\r\n      runningTotal = 0;\r\n      previousOperator = null;\r\n      break;\r\n    case \"=\":\r\n      if (previousOperator === null) {\r\n        return; //do nothing\r\n      }\r\n      flushOperation(parseInt(buffer));\r\n      previousOperator = null;\r\n      buffer = \"\" + runningTotal;\r\n      runningTotal = 0;\r\n      break;\r\n    case \"←\":\r\n      if (buffer.length === 1) {\r\n        buffer = \"0\"; //if hit one num, backspace will become \"0\"\r\n      } else {\r\n        buffer = buffer.substring(0, buffer.length - 1); //take off the last number\r\n      }\r\n      break;\r\n    default:\r\n      //for operator\r\n      handleMath(value);\r\n  }\r\n}\r\n\r\nfunction handleMath(value) {\r\n  const intBuffer = parseInt(buffer);\r\n  if (runningTotal === 0) {\r\n    runningTotal = intBuffer; //keep previous num here, click 5, then click '+', we keep '5' in this var\r\n  } else {\r\n    flushOperation(intBuffer);\r\n  }\r\n\r\n  previousOperator = value;\r\n\r\n  buffer = \"0\";\r\n}\r\n\r\nfunction flushOperation(intBuffer) {\r\n  if (previousOperator === \"+\") {\r\n    runningTotal += intBuffer;\r\n  } else if (previousOperator === \"-\") {\r\n    runningTotal -= intBuffer;\r\n  } else if (previousOperator === \"×\") {\r\n    runningTotal *= intBuffer;\r\n  } else {\r\n    runningTotal /= intBuffer;\r\n  }\r\n}\r\n\r\nfunction rerender() {\r\n  screen.innerText = buffer;\r\n}\r\n"]}